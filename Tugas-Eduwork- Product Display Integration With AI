php artisan make:model ProductCategory -m


public function up()
{
    Schema::create('product_categories', function (Blueprint $table) {
        $table->id();
        $table->string('name');
        $table->timestamps();
    });
}

php artisan make:model Product -m


public function up()
{
    Schema::create('products', function (Blueprint $table) {
        $table->id();
        $table->string('name');
        $table->text('description');
        $table->decimal('price', 8, 2);
        $table->foreignId('category_id')->constrained('product_categories')->onDelete('cascade');
        $table->timestamps();
    });
}


php artisan migrate

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class ProductCategory extends Model
{
    use HasFactory;

    protected $fillable = ['name'];

    // Relasi ke produk
    public function products()
    {
        return $this->hasMany(Product::class);
    }
}

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Product extends Model
{
    use HasFactory;

    protected $fillable = ['name', 'description', 'price', 'category_id'];

    // Relasi ke kategori
    public function category()
    {
        return $this->belongsTo(ProductCategory::class);
    }
}

php artisan make:controller ProductController


namespace App\Http\Controllers;

use App\Models\Product;
use Illuminate\Http\Request;

class ProductController extends Controller
{
    public function index()
    {
        // Mengambil produk dengan pagination, menampilkan 10 produk per halaman
        $products = Product::with('category')->paginate(10);

        return view('products.index', compact('products'));
    }
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Produk</title>
</head>
<body>
    <h1>Daftar Produk</h1>

    <table border="1">
        <thead>
            <tr>
                <th>Nama Produk</th>
                <th>Kategori</th>
                <th>Deskripsi</th>
                <th>Harga</th>
            </tr>
        </thead>
        <tbody>
            @foreach ($products as $product)
                <tr>
                    <td>{{ $product->name }}</td>
                    <td>{{ $product->category->name }}</td>
                    <td>{{ $product->description }}</td>
                    <td>{{ $product->price }}</td>
                </tr>
            @endforeach
        </tbody>
    </table>

    <!-- Menampilkan Pagination -->
    <div>
        {{ $products->links() }}
    </div>
</body>
</html>

use App\Http\Controllers\ProductController;

Route::get('/products', [ProductController::class, 'index']);

php artisan make:seeder ProductCategorySeeder


namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\ProductCategory;

class ProductCategorySeeder extends Seeder
{
    public function run()
    {
        ProductCategory::create(['name' => 'Elektronik']);
        ProductCategory::create(['name' => 'Pakaian']);
        ProductCategory::create(['name' => 'Makanan']);
    }
}

php artisan make:seeder ProductSeeder


namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Product;
use App\Models\ProductCategory;

class ProductSeeder extends Seeder
{
    public function run()
    {
        $category = ProductCategory::first(); // Ambil kategori pertama
        Product::create([
            'name' => 'Smartphone',
            'description' => 'Smartphone terbaru dengan fitur canggih',
            'price' => 5000000,
            'category_id' => $category->id,
        ]);

        // Tambahkan produk lain sesuai kebutuhan
    }
}

php artisan db:seed
